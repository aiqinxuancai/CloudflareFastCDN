name: Build, Release and Docker Publish on Tag

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            runtime: win-x64
            artifact_name: CloudflareFastCDN-win-x64.zip
          - os: ubuntu-latest
            runtime: linux-x64
            artifact_name: CloudflareFastCDN-linux-x64.zip
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build with AOT
        run: |
          dotnet publish CloudflareFastCDN/CloudflareFastCDN.csproj -c Release -r ${{ matrix.runtime }} \
          --self-contained true \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=true \
          -p:PublishAot=true \
          -o ./publish/${{ matrix.runtime }}

      - name: Zip Release
        run: |
          if ("${{ matrix.os }}" -eq "windows-latest") {
            Compress-Archive -Path ./publish/${{ matrix.runtime }}/* -DestinationPath ${{ matrix.artifact_name }}
          } else {
            zip -r ${{ matrix.artifact_name }} ./publish/${{ matrix.runtime }}
          }
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CloudflareFastCDN-win-x64.zip/CloudflareFastCDN-win-x64.zip
          asset_name: CloudflareFastCDN-win-x64.zip
          asset_content_type: application/zip

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CloudflareFastCDN-linux-x64.zip/CloudflareFastCDN-linux-x64.zip
          asset_name: CloudflareFastCDN-linux-x64.zip
          asset_content_type: application/zip

  docker:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/CloudflareFastCDN
          file: ${{ github.workspace }}/CloudflareFastCDN/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cloudfarefastcdn:${{ github.ref_name }}, ${{ secrets.DOCKERHUB_USERNAME }}/cloudfarefastcdn:latest
